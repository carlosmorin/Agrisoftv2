= simple_form_for([:logistic, @carrier], data: { controller: 'masks address carriers slim-select fiscal' }) do |f|
  .row.mt-2
    .col-md-6
      .card
        .card-body.p-3
          .form-group  
            .row
              .col-lg-12
                h6.s-14.mb-0
                  i.fas.fa-info-circle.mr-2
                  b = "General".upcase
            .row.mt-3
              .col-lg-12
                = f.input :name, required: true, autofocus: true, input_html: { class: 'form-control form-control-sm', data: { target: 'fiscal.nameInput', action: 'keyup->fiscal#setFiscalName' } } 
              .col-lg-12
                = f.input :phone, required: true, autofocus: true, input_html: { class: 'form-control form-control-sm phone_mask_ext' }
            .row.mt-4
              .col-lg-12
                h6.s-14.mb-0
                  span PERMISOS
            .row.mt-2
              .col-md-3
                = f.input :caat, autofocus: true, input_html: { class: 'form-control form-control-sm ' }
              .col-md-3
                = f.input :alpha, autofocus: true, input_html: { class: 'form-control form-control-sm ' }
              .col-md-3
                = f.input :iccmx, autofocus: true, input_html: { class: 'form-control form-control-sm ' }
              .col-md-3
                = f.input :usdot, autofocus: true, input_html: { class: 'form-control form-control-sm ' }

      .card
        .card-body.p-3
          .form-group
            .row
              .col-md-8
                h6.s-14.mb-0
                  i.fas.fa-map-marked-alt.mr-2
                  b = "Domicilio fisico".upcase
            .row.mt-4
              .col-md-2
                = f.label :country_id
              .col-md-10
                = f.input :country_id, label: false, collection: Country.all, input_html: { class: 's-12', data: { action: "change->address#filter_by_country", target: "address.countrySelect fiscal.countrySelect", container: "general_address" }}
            .row.mt-2.general_address
              .col-md-2
                = f.label :state_id
              .col-md-10
                = f.input :state_id, label: false, collection: states, input_html: { class: 's-12', data: { action: "change->address#filter_by_state", target: "address.stateId fiscal.stateSelect", container: "general_address" } }
            .row.mt-2.general_address
              .col-lg-2
                = f.label :municipality_id
              .col-lg-10
                = f.input :municipality_id, label: false, collection: municipalities, required: true, autofocus: true, input_html: { class: 's-12' }
            .row.mt-2
              .col-md-2
                = f.label :cp
              .col-lg-10
                = f.input :cp, label: false, required: true, autofocus: true, input_html: { class: 'form-control form-control-sm cp_mask', data: { target: "fiscal.cpInput" }}
            .row.mt-2
              .col-md-2
                = f.label :address
              .col-md-10		
                = f.input :address, label: false, required: true, autofocus: true, input_html: { class: 'form-control form-control-sm' }
          .row.mt-4.d-none
            .col-12.text-right
              .custom-control.custom-checkbox
                input#customCheckbox2.custom-control-input type="checkbox" data-target="fiscal.setAsFiscalAddress" data-action="change->fiscal#setAsFiscalAddress"  /
                label.custom-control-label for="customCheckbox2"  Usar como direcci√≥n fiscal
    .col-md-6
      .card
        .card-body.p-3
          .row
            .col-lg-12
              h6.s-14.mb-0
                i.fas.fa-file-invoice.mr-2
                b = "Datos fiscales".upcase
          .row
            .col-12
              #fiscals.fiscals
                = f.simple_fields_for :fiscals do |fiscal|
                  = render 'fiscals_fields', f: fiscal
  .row
    .col-12.text-right.mb-4
      .form-actions.text-right
        = link_to logistic_config_box_types_path, class: 'btn btn-default btn-sm pl-1 mr-2' do
          i.fas.fa-chevron-left.s-12.mr-2
          span Volver
        button.btn.btn-dark-blue.btn-sm.pl-1 type="submit"
					svg.feather.feather-save fill="none" height="14" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewbox=("0 0 24 24") width="24" xmlns="http://www.w3.org/2000/svg" 
					  path d=("M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z") 
					  polyline points=("17 21 17 13 7 13 7 21") 
					  polyline points=("7 3 7 8 15 8") 
					span Guardar